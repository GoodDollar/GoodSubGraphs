type DailyUBI @entity {
  id: ID!
  pool: BigInt
  quota: BigInt
  activeUsers: BigInt
  totalUBIDistributed: BigInt
  totalClaims: BigInt
  newClaimers: BigInt
  timestamp: BigInt
  ubiSchemeAddress: Bytes
  balance: BigInt
  cycleLength: BigInt
  dayInCycle: BigInt
}

type WalletStat @entity {
  id: ID!
  dateAppeared: BigInt
  balance: BigInt
  inTransactionsCount: BigInt
  inTransactionsCountClean: BigInt
  inTransactionsValue: BigInt
  inTransactionsValueClean: BigInt
  outTransactionsCount: BigInt
  outTransactionsCountClean: BigInt
  outTransactionsValue: BigInt
  outTransactionsValueClean: BigInt
  totalTransactionsCount: BigInt
  totalTransactionsCountClean: BigInt
  totalTransactionsValue: BigInt
  totalTransactionsValueClean: BigInt
  lastClaimed: BigInt
  totalClaimedCount: BigInt
  totalClaimedValue: BigInt
  claimStreak: BigInt!
  longestClaimStreak: BigInt
  isWhitelisted: Boolean
  isActiveUser: Boolean
  dateJoined: BigInt
  lastTransactionFrom: BigInt
  lastTransactionTo: BigInt
}

type TransactionStat @entity {
  id: ID!
  dayStartBlockNumber: BigInt
  transactionsCount: BigInt
  transactionsCountClean: BigInt
  transactionsValue: BigInt
  transactionsValueClean: BigInt
  totalInCirculation: BigInt
}

type GlobalStatistics @entity {
  id: ID!
  TransactionStat: TransactionStat
  totalUBIDistributed: BigInt
  uniqueClaimers: BigInt
  totalClaims: BigInt
}

type UBICollected @entity {
  id: ID!
  contract: Bytes, 
  block: BigInt
  blockTimestamp: BigInt  
  ubi: BigDecimal!
  communityPool: BigDecimal!
}

type UBIHistory @entity {
  id: ID! 
  block: BigInt
  blockTimestamp: BigInt  
  totalDailyUBI: BigDecimal!
  totalDailyCommunityPool: BigDecimal!
}
