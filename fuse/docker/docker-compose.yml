version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node:v0.18.0
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'fuse:https://explorer-node.fuse.io/'
      # ethereum: 'mainnet:https://:d57939c260bdf0a6f22550e2350b4312@fuse-archival.gateway.pokt.network/v1/lb/60ee374fc6318362996a1fb0'
      # ethereum: 'mainnet:https://oefusefull1.liquify.info/'
      GRAPH_LOG: info
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 5000
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 2000
      ETHEREUM_BLOCK_BATCH_SIZE: 2000

      # GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 1000
      # GRAPH_ETHEREUM_MAX_EVENT_ONLY_RANGE: 10000
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
      - '8080:8080'
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
